<?php
    /*
     * Copyright Extend (c) 2024. All rights reserved.
     */

    /** @var Magento\Framework\Escaper $escaper */
    /** @var  Magento\GroupedProduct\Block\Product\View\Type\Grouped $block */

    $viewModel = $block->getData('viewModel');
    $stringUtils = $escaper->escapeJs($block->getViewFileUrl('Extend_HyvaIntegration::js/utils/string-utils.js'));
    $categoryName = '';

    if ($category = $block->getProduct()->getCategory()) {
      $categoryName = $category->getName();
    }

    $viewModel = $block->getData('viewModel');
    $currencyCode = $viewModel->getCurrencyCode();
    $isCurrencySupported = $viewModel->isCurrencySupported();
    $shouldRender = $viewModel->isExtendProductProtectionEnabled()
                    && $viewModel->isProductProtectionProductDisplayPageOfferEnabled()
                    && $isCurrencySupported;


    if ($shouldRender) : ?>
        <script>
            window.extendGrouped = {};
        </script>

        <div id="product_protection_offers">
            <?php foreach ($block->getAssociatedProducts() as $product) : ?>
                  <div>
                        <div class="product-protection-offer product-id-<?= $product->getEntityId(); ?>"
                            id="product_protection_offer_<?= preg_replace('/[^a-zA-Z0-9-_|]/', '',  $product->getSku()); ?>"
                            colspan="3" style="border-top: 0 !important">
                        </div>
                  </div>
                 <script>
                    // build the div for the offer and append to the super_group

                    entityId=<?= $product->getEntityId(); ?>;
                    window.extendGrouped[entityId] = document.createElement('div');
                    currentProduct = window.extendGrouped[entityId];
                    currentProduct.id = "product_protection_offer_<?= preg_replace('/[^a-zA-Z0-9_|]/', '',  $product->getSku()); ?>";
                    currentProduct.className ="product-protection-offer product-id-<?= $product->getEntityId(); ?>";
                    currentProduct.dataset.productId = entityId;
                    currentProduct.dataset.productSku = '<?= $product->getSku(); ?>';
                    currentProduct.dataset.productPrice = '<?= $product->getPrice(); ?>';
                    document.querySelector(`[for="super_group[${entityId}]"]`).append(currentProduct);
                </script>
            <?php endforeach; ?>
        </div>

        <script type="module">
            import stringUtils from '<?= $stringUtils ?>'

            window.addEventListener(
                'private-content-loaded', (event) => {
                    initProductWarrantyOffers(event);
                }, { once:true });

            async function initProductWarrantyOffers(event) {
                const customerData = event.detail.data;
                const config = [];

                for (let index in window.extendGrouped){
                    config.push({
                        extendStoreUuid: "<?= $block->getData('viewModel')->getExtendStoreUuid() ?>",
                        activeEnvironment: "<?= $block->getData('viewModel')->getActiveEnvironment() ?>",
                        selectedProductSku: window.extendGrouped[index].dataset.productSku,
                        selectedProductPrice:  window.extendGrouped[index].dataset.productPrice,
                        productCategory: "<?= $categoryName; ?>",
                        currencyCode: "<?= $currencyCode ?>",
                        selectedConfigurableProduct: {}
                    })
                }

                if (window.Extend && window.ExtendMagento ){
                    productProtectionOffer(config, customerData);
                }else{
                    window.addEventListener(
                        'extendLoaded', () => {
                            productProtectionOffer(config, customerData);
                        });
                }
            }

            function productProtectionOffer(config, customerData) {
                'use strict';
                const cartUtils = window.cart_utils(customerData);

                const getProductQuantity = function (productOffer) {
                    let quantity = 1
                    const quantityInput = document.querySelector('#super_group\\['+productOffer+'\\]');
                    if (quantityInput) {
                        quantity = parseInt(quantityInput.value)
                    }else {
                        return null
                    }
                    return quantity
                }

                return function() {

                    window.Extend.config({
                        storeId: config[0].extendStoreUuid,
                        environment: config[0].activeEnvironment,
                        currency: config[0].currencyCode,
                    })

                    for (let key in config) {
                        let currentOffer = document.querySelector('#product_protection_offer_' +
                            stringUtils.sanitizeForElementId(config[key].selectedProductSku));

                        if (Extend.buttons.instance(currentOffer)){
                           Extend.buttons.destroyAll();
                        }
                        Extend.buttons.render(
                            currentOffer,
                            {
                                referenceId: config[key].selectedProductSku,
                                price: Math.round(config[key].selectedProductPrice * 100),
                                category: config[key].productCategory
                            },
                        )
                    }

                    // Listen for the add to cart button to be clicked.
                    // Show modal offer on qualifying simple products if no offer was chosen by the customer.

                    const atcButton = document.getElementById('product-addtocart-button');
                    atcButton.addEventListener('click', handleAddToCart );

                    async function handleAddToCart(event) {
                        event.preventDefault();
                        event.stopPropagation();

                        let index = 0;
                        for (let productOffer in window.extendGrouped){
                            let buttonInstance = Extend.buttons.instance(
                                window.extendGrouped[productOffer]
                            )

                            if (buttonInstance) {
                                    let selectedProduct

                                    if (
                                        buttonInstance.getActiveProduct().id ===
                                        config[index].selectedProductSku
                                    ) {
                                        selectedProduct = config[index];
                                    } else {
                                        selectedProduct = config[index].selectedConfigurableProduct;
                                    }

                                    const cartItems = cartUtils
                                        .getCartItems()
                                        .map(cartUtils.mapToExtendCartItem)

                                    const quantity = getProductQuantity(productOffer)

                                    const selectedPlan = buttonInstance.getPlanSelection()

                                    // If a plan is selected, add it to the cart
                                    if (quantity){
                                        if (selectedPlan && quantity >0) {
                                            const {planId, price, term, title, coverageType, offerId} = selectedPlan;
                                            const {
                                                selectedProductSku: productId,
                                                selectedPrice: listPrice,
                                            } = selectedProduct

                                            const planToUpsert = {
                                                planId,
                                                price,
                                                term,
                                                title,
                                                coverageType,
                                            }

                                            await ExtendMagento.upsertProductProtection({
                                                plan: planToUpsert,
                                                cartItems,
                                                productId,
                                                listPrice,
                                                offerId,
                                                quantity,
                                            })
                                        }
                                    }
                            }
                            index++;
                        }
                        //submit the add to cart
                        document.querySelector('#product_addtocart_form').submit();
                        }
                }.bind(window.Extend, window.ExtendMagento)();
            }
        </script>
<?php endif; ?>
<!--
  ~ Copyright Extend (c) 2024. All rights reserved.
  -->
